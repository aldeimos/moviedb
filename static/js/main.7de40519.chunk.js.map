{"version":3,"sources":["assets/logo.svg","assets/male.svg","assets/favorite_off.svg","assets/favorite_on.svg","store/films/index.js","store/films/actions.js","store/index.js","components/Header/index.js","store/films/actionCreators.js","api/index.js","components/Filter/FilterItem/index.js","components/Filter/index.js","components/SearchBar/index.js","components/Sort/SortItem/index.js","components/Sort/index.js","components/FilmCard/index.js","utils/sortingFilms.js","components/Popular/index.js","components/Favorites/index.js","components/Loader/index.js","containers/Welcome/index.js","components/RecommendedFilm/index.js","utils/parseFilmsDetails.js","containers/FilmDetails/index.js","utils/shuffleArray.js","containers/App/index.js","index.js"],"names":["module","exports","initialState","popular_films","favorites_films","JSON","parse","localStorage","getItem","genres","film_details","filterMode","sortMode","searchValue","films","state","action","type","film","added","setItem","stringify","filmId","deleted","filter","stateFilm","id","combineReducers","Header","className","to","src","logo","alt","width","height","userPic","setSortMode","API_KEY","BASE_END_POINT","getMovie","movieId","a","fetch","then","response","json","getPopularFilms","page","getGenres","FilterItem","title","handler","active","onClick","Filter","dispatch","useDispatch","useSelector","store","changeFilterMode","mode","setFilterMode","SearchBar","htmlFor","name","placeholder","value","onChange","e","setSearchValue","target","SortItem","Sort","changeSortMode","FilmCard","release_date","poster_path","vote_average","genreIds","overview","favoritesFilms","useState","favFilm","length","isFavorite","setIsFavorite","filmGenres","setFilmGenres","useEffect","forEach","genreId","genre","prev","preventDefault","window","M","toast","html","genre_ids","favorite_on","favorite_off","moment","format","slice","join","sortFilms","shallowCopy","sort","b","Popular","popularFilms","sortedFilms","toLowerCase","includes","map","key","runtime","Favorites","Loader","Welcome","loading","setLoading","loadedPage","setLoadedPage","console","log","API","results","RecommendedFilm","poster","parseBigInt","big_int","replace","FilmDetails","match","detailedFilm","tagline","budget","revenue","params","details","hours","Math","trunc","minutes","parseDetails","String","arr","j","i","floor","random","shuffleArray","recFilm","App","loadPopular","loadGenres","basename","process","path","exact","component","from","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,6bCErCC,EAAe,CACnBC,cAAe,GACfC,gBAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MACvEC,OAAQ,GACRC,aAAc,GACdC,WAAY,UACZC,SAAU,UACVC,YAAa,IAoEAC,EAhED,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCAC9C,OAAQA,EAAOC,MACb,ICfwB,eDexB,IACUd,EAAkBa,EAAlBb,cACR,OAAO,2BACFY,GADL,IAEEZ,kBAEJ,ICpB6B,oBDoB7B,IACUW,EAAUE,EAAVF,MACR,OAAO,2BACFC,GADL,IAEEZ,cAAc,GAAD,mBAAMY,EAAMZ,eAAZ,YAA8BW,MAE/C,ICzBuB,cDyBvB,IACUL,EAAWO,EAAXP,OACR,OAAO,2BACFM,GADL,IAEEN,WAEJ,IC9B6B,oBD8B7B,IACUC,EAAiBM,EAAjBN,aACR,OAAO,2BACFK,GADL,IAEEL,iBAEJ,ICnC4B,mBDmC5B,IACUQ,EAASF,EAATE,KACFC,EAAK,sBAAOJ,EAAMX,iBAAb,CAA8Bc,IAEzC,OADAX,aAAaa,QAAQ,kBAAmBf,KAAKgB,UAAUF,IAChD,2BACFJ,GADL,IAEEX,gBAAiBe,IAErB,IC1CiC,wBD0CjC,IACUG,EAAWN,EAAXM,OACFC,EAAUR,EAAMX,gBAAgBoB,QAAO,SAACC,GAAD,OAAeA,EAAUC,KAAOJ,KAE7E,OADAf,aAAaa,QAAQ,kBAAmBf,KAAKgB,UAAUE,IAChD,2BACFR,GADL,IAEEX,gBAAiBmB,IAErB,ICjD2B,kBDiD3B,IACUZ,EAAeK,EAAfL,WACR,OAAO,2BACFI,GADL,IAEEJ,eAEJ,ICtDyB,gBDsDzB,IACUC,EAAaI,EAAbJ,SACR,OAAO,2BACFG,GADL,IAEEH,aAEJ,IC3D4B,mBD2D5B,IACUC,EAAgBG,EAAhBH,YACR,OAAO,2BACFE,GADL,IAEEF,gBAEJ,QAAS,OAAOE,IEtELY,cAAgB,CAC7Bb,U,iECGWc,EAAS,WACpB,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAASC,GAAG,KACV,yBACEC,IAAKC,IACLC,IAAI,OACJC,MAAO,IACPC,OAAQ,OAId,yBAAKN,UAAU,mBACb,yBAAKE,IAAKK,IAASH,IAAI,gBADzB,gB,OC6BGI,EAAc,SAACzB,GAC1B,MAAO,CACLK,KH9CyB,gBG+CzBL,a,yBCtDE0B,EAAU,mCACVC,EAAiB,gCAEVC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EACbC,MAAM,sCAAD,OAAuCF,EAAvC,oBAA0DH,IACjEM,MAAK,SAACC,GAAD,OAAcA,EAASC,WAFb,2CAAH,sDAKRC,EAAe,uCAAG,wCAAAL,EAAA,6DAAOM,EAAP,+BAAc,EAAd,kBACpBL,MAAM,GAAD,OAAIJ,EAAJ,iCAA2CD,EAA3C,iBAA2DU,IACpEJ,MAAK,SAACC,GAAD,OAAcA,EAASC,WAFJ,2CAAH,qDAKfG,EAAS,uCAAG,sBAAAP,EAAA,+EACdC,MAAM,GAAD,OAAIJ,EAAJ,oCAA8CD,IACvDM,MAAK,SAACC,GAAD,OAAcA,EAASC,WAFV,2CAAH,qDCRTI,G,MAAa,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OACxC,OACI,yBACIxB,UAAS,sBAAiBwB,GAAU,sBACpCC,QAASF,GAERD,KCJAI,G,MAAS,WAClB,IAAMC,EAAWC,cACX9C,EAAa+C,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMH,cAEhDiD,EAAmB,SAACC,GACxBL,EHgCuB,SAAC7C,GAC5B,MAAO,CACLM,KHxC2B,kBGyC3BN,cGnCWmD,CAAcD,IACvBL,EAASnB,EAAY,aAGvB,OACI,6BAASR,UAAU,UACf,kBAAC,EAAD,CACIsB,MAAM,UACNC,QAAS,kBAAMQ,EAAiB,YAChCP,OAAuB,YAAf1C,IAEZ,kBAAC,EAAD,CACIwC,MAAM,YACNC,QAAS,kBAAMQ,EAAiB,cAChCP,OAAuB,cAAf1C,OCpBXoD,G,MAAY,WACvB,IAAMP,EAAWC,cACX5C,EAAc6C,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMD,eAErD,OACI,6BAASgB,UAAU,UACf,2BAAOA,UAAU,gBAAgBmC,QAAQ,UAAzC,gBACA,2BACInC,UAAU,gBACVH,GAAG,SACHT,KAAK,OACLgD,KAAK,SACLC,YAAY,2BACZC,MAAOtD,EACPuD,SAAU,SAACC,GAAD,OAAOb,EJsCH,SAAC3C,GAC7B,MAAO,CACLI,KHpD4B,mBGqD5BJ,eIzCsCyD,CAAeD,EAAEE,OAAOJ,cCfrDK,G,MAAW,SAAC,GAA8B,IAA7BrB,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAEtC,OACI,yBACExB,UAAS,oBAAewB,GAAU,oBAChCC,QAASF,GAERD,KCJAsB,G,MAAO,WAClB,IAAMjB,EAAWC,cACX7C,EAAW8C,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMF,YAE9C8D,EAAiB,SAACb,GACtBL,EAASnB,EAAYwB,KAErB,OACI,6BAAShC,UAAU,QACf,kBAAC,EAAD,CACEsB,MAAM,kBACNC,QAAS,kBAAMsB,EAAe,YAC9BrB,OAAqB,YAAbzC,IAEV,kBAAC,EAAD,CACEuC,MAAM,eACNC,QAAS,kBAAMsB,EAAe,iBAC9BrB,OAAqB,iBAAbzC,IAEV,kBAAC,EAAD,CACEuC,MAAM,iBACNC,QAAS,kBAAMsB,EAAe,iBAC9BrB,OAAqB,iBAAbzC,O,2DCnBT+D,EAAW,SAAC,GAAwF,IAAvFjD,EAAsF,EAAtFA,GAAIyB,EAAkF,EAAlFA,MAAOyB,EAA2E,EAA3EA,aAAcC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,aAAcrE,EAAkC,EAAlCA,OAAQsE,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,SACtFC,EAAiB5E,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MACvEgD,EAAWC,cAF2F,EAGxEyB,mBAC+B,IAAjED,EAAezD,QAAO,SAAC2D,GAAD,OAAaA,EAAQzD,KAAOA,KAAI0D,QAJoD,mBAGrGC,EAHqG,KAGzFC,EAHyF,OAMxEJ,mBAAS,IAN+D,mBAMrGK,EANqG,KAMzFC,EANyF,KAsD5G,OAVAC,qBAAU,WACRV,EAASW,SAAQ,SAACC,GAChBlF,EAAOiF,SAAQ,SAACE,GACVA,EAAMlE,KAAOiE,GACfH,GAAc,SAAAK,GAAI,4BAAQA,GAAR,CAAcD,EAAM3B,kBAI3C,CAACxD,IAGE,yBAAKoB,UAAU,aACb,kBAAC,IAAD,CAASC,GAAE,mBAAcJ,IACzB,yBAAKG,UAAU,qBACb,yBAAKE,IAAG,0DAAqD8C,GAAe5C,IAAI,kBAChF,yBACEJ,UAAU,oBACVyB,QA1CW,SAACe,GAGtB,GAFAA,EAAEyB,iBAEET,EAKF,OAJA7B,EPIC,CACLvC,KHlCiC,wBGmCjCK,OONiCI,IAE7B4D,GAAc,QACdS,OAAOC,EAAEC,MAAM,CAAEC,KAAM,kJAIzB1C,EPVG,CACLvC,KH5B4B,mBG6B5BC,KOQ0B,CACtBQ,KACAyB,QACAyB,eACAC,cACAC,eACArE,SACA0F,UAAWpB,EACXC,cAEFM,GAAc,GACdS,OAAOC,EAAEC,MAAM,CAAEC,KAAM,oJAsBb,yBAAKnE,IAAKsD,EAAae,IAAcC,IAAcpE,IAAI,WAAWC,MAAO,GAAIC,OAAQ,OAGzF,yBAAKN,UAAU,oBACb,4BAAKsB,EAAL,MACA,0BAAMtB,UAAS,4BA1DnBiD,GAAgB,EACX,yBACEA,EAAe,GAAKA,EAAe,EACrC,2BAEA,0BAsDIA,IAGP,yBAAKjD,UAAU,mBACb,yBAAKA,UAAU,2BACZyE,IAAO1B,GAAc2B,OAAO,OAE/B,yBAAK1E,UAAU,qBACZ0D,EACEiB,MAAM,EAAGjB,EAAWH,QAAU,EAAIG,EAAWH,OAAS,GACtDqB,KAAK,QAIZ,yBAAK5E,UAAU,mBACZmD,EAASwB,MAAM,EAAG,KADrB,UC5FNE,G,MAAY,SAAC5F,GAAiC,IAA1BF,EAAyB,uDAAd,UACnC,OAAQA,GACN,IAAK,eACH,IAAM+F,EAAW,YAAO7F,GACxB,OAAO6F,EAAYC,MAAK,SAAClE,EAAGmE,GAAJ,OAAUP,IAAO5D,EAAEkC,cAAc2B,OAAO,KAAOD,IAAOO,EAAEjC,cAAc2B,OAAO,QAEvG,IAAK,eACH,IAAMI,EAAW,YAAO7F,GACxB,OAAO6F,EAAYC,MAAK,SAAClE,EAAGmE,GAAJ,OAAUnE,EAAEoC,aAAe+B,EAAE/B,gBAGvD,QAAS,OAAOhE,KCNPgG,EAAU,SAAC,GAAqD,IAApDrG,EAAmD,EAAnDA,OAAQwE,EAA2C,EAA3CA,eAAgBrE,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACnDkG,EAAerD,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMX,iBAGlD6G,EAAcN,EAAUK,EAAcnG,GAE5C,OACE,oCAE+F,IAD5FoG,EACExF,QAAO,SAACN,GAAD,OAAUA,EAAKiC,MAAM8D,cAAcC,SAASrG,EAAYoG,kBAAgB7B,OAChF4B,EACGxF,QAAO,SAACN,GAAD,OAAUA,EAAKiC,MAAM8D,cAAcC,SAASrG,EAAYoG,kBAC/DE,KAAI,SAACjG,GAAD,OAAU,kBAAC,EAAD,CACfkG,IAAKlG,EAAKQ,GACVA,GAAIR,EAAKQ,GACToD,aAAc5D,EAAK4D,aACnBF,aAAc1D,EAAK0D,aACnBI,SAAU9D,EAAK8D,SACfH,YAAa3D,EAAK2D,YAClB1B,MAAOjC,EAAKiC,MACZkE,QAASnG,EAAKmG,QACdtC,SAAU7D,EAAKiF,UACf1F,OAAQA,EACRwE,eAAgBA,OAChB,4EC1BGqC,EAAY,SAAC,GAAqD,IAApD7G,EAAmD,EAAnDA,OAAQwE,EAA2C,EAA3CA,eAAgBrE,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAErDmG,EAAcN,EAAUzB,EAAgBrE,GAE9C,OACE,oCAE+F,IAD5FoG,EACExF,QAAO,SAACN,GAAD,OAAUA,EAAKiC,MAAM8D,cAAcC,SAASrG,EAAYoG,kBAAgB7B,OAChF4B,EACGxF,QAAO,SAACN,GAAD,OAAUA,EAAKiC,MAAM8D,cAAcC,SAASrG,EAAYoG,kBAC/DE,KAAI,SAACjG,GAAD,OAAU,kBAAC,EAAD,CACbkG,IAAKlG,EAAKQ,GACVA,GAAIR,EAAKQ,GACToD,aAAc5D,EAAK4D,aACnBF,aAAc1D,EAAK0D,aACnBI,SAAU9D,EAAK8D,SACfH,YAAa3D,EAAK2D,YAClB1B,MAAOjC,EAAKiC,MACZkE,QAASnG,EAAKmG,QACdtC,SAAU7D,EAAKiF,UACf1F,OAAQA,EACRwE,eAAgBA,OACpB,4ECvBKsC,G,MAAS,WACpB,OACE,yBAAK1F,UAAU,YACb,8BACA,8BACA,8BACA,iCCKO2F,G,MAAU,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAAgB,EACZxC,mBAAS,GADG,mBACzCyC,EADyC,KAC7BC,EAD6B,KAE1CpE,EAAWC,cACXwB,EAAiB5E,KAAKC,MAAMC,aAAaC,QAAQ,oBACjDG,EAAa+C,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMH,cAChDC,EAAW8C,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMF,YAC9CC,EAAc6C,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMD,eACjDJ,EAASiD,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAML,UAgBlD,OAFAoH,QAAQC,IAAIL,GAGV,yBAAK5F,UAAU,WACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iDACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,iDACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,iBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,oBACZ4F,EACC,kBAAC,EAAD,MACe,YAAf9G,EACE,kBAAC,EAAD,CACEsE,eAAgBA,EAChBrE,SAAUA,EACVC,YAAaA,EACbJ,OAAQA,IAEV,kBAAC,EAAD,CACEwE,eAAgBA,EAChBrE,SAAUA,EACVC,YAAaA,EACbJ,OAAQA,KAIA,YAAfE,IACA8G,GACC,4BACE5F,UAAU,qBACVZ,KAAK,SACLqC,QAAS,kBA/CfsE,EADgB5E,EAgDc2E,EAAa,GA9C3CD,GAAW,QACXK,EAAoB/E,GACjBJ,MAAK,SAACzC,GACLuH,GAAW,GACXlE,EZtBC,CACLvC,KHV6B,oBGW7BH,MYoB6BX,EAAc6H,aAN5B,IAAChF,IA6CZ,gBCnEKiF,G,MAAkB,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OAAQ/E,EAAyB,EAAzBA,MAAO2B,EAAkB,EAAlBA,aAG9C,OACE,yBAAKjD,UAAU,oBACb,yBAAKA,UAAU,4BACb,yBAAKE,IAAKmG,EAAQjG,IAAI,MAExB,yBAAKJ,UAAU,2BACZsB,GAEH,yBAAKtB,UAAU,4BACZiD,MCLHqD,G,MAAc,SAACC,GACnB,OAAOA,EAAQC,QAAQ,8BAA+B,SCD3CC,EAAc,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACrB/E,EAAWC,cADqB,EAEQyB,mBAAS,IAFjB,mBAGhCsD,GAHgC,UAGjB9E,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMJ,iBAClDqG,EAAerD,aAAY,SAACC,GAAD,OAAWA,EAAM7C,MAAMX,iBAChDuB,EAA4G8G,EAA5G9G,GAAIyB,EAAwGqF,EAAxGrF,MAAOsF,EAAiGD,EAAjGC,QAASpB,EAAwFmB,EAAxFnB,QAASqB,EAA+EF,EAA/EE,OAAQjI,EAAuE+H,EAAvE/H,OAAQkI,EAA+DH,EAA/DG,QAAS/D,EAAsD4D,EAAtD5D,aAAcE,EAAwC0D,EAAxC1D,aAAcD,EAA0B2D,EAA1B3D,YAAaG,EAAawD,EAAbxD,SAEvG6C,QAAQC,IAAIU,GAEZ/C,qBAAU,WACRsC,EAAaQ,EAAMK,OAAOlH,IACvBkB,MAAK,SAACiG,GAAD,OAAarF,EfEhB,CACLvC,KHtB6B,oBGuB7BP,aeJ8CmI,SAC7C,IAYH,OACE,yBAAKhH,UAAU,gBACb,yBAAKA,UAAU,wBACb,yBAAKE,IAAG,yDAAoD8C,GAAe5C,IAAI,MAEjF,yBAAKJ,UAAU,yBACb,wBAAIA,UAAU,uBACXsB,GAEH,uBAAGtB,UAAU,yBAAyB4G,GACtC,uBAAG5G,UAAU,iDAAb,YD5Ca,SAACwF,GACpB,IAAMyB,EAAQC,KAAKC,MAAM3B,EAAU,IAC7B4B,EAAU5B,EAAU,GAC1B,MAAM,GAAN,OAAUyB,EAAV,aAAoBG,EAApB,KCyC6EC,CAA0B7B,IACjG,uBAAGxF,UAAU,sDAAb,iBDvCiB,SAAC+C,GACxB,OAAO0B,IAAO1B,GAAc2B,OAAO,MCsCoD2C,CAA8BtE,IAC/G,uBAAG/C,UAAU,gDAAb,aAAuEqH,EAAyBC,OAAOT,KACvG,uBAAG7G,UAAU,iDAAb,cAAyEqH,EAAyBC,OAAOR,KACzG,uBAAG9G,UAAU,gDAAb,WAAqEiD,GACrE,uBAAGjD,UAAU,gDAAb,WAAqEpB,GAAUA,EAAO0G,KAAI,SAACvB,GAAD,OAAWA,EAAM3B,QAAMwC,KAAK,QAExH,yBAAK5E,UAAU,0BACb,4CACCmD,GAEH,yBAAKnD,UAAU,mCACb,kDACC2G,EAAa/H,QAhCXsG,EAAavF,QAAO,SAACN,GAC1B,GAAIA,EAAKQ,KAAOA,EACd,OAAOR,EAAKiF,UAAUe,SC5BF,SAACkC,GAG3B,IAFA,IACIC,EADE1C,EAAW,YAAOyC,GAEfE,EAAI3C,EAAYvB,OAAS,EAAGkE,EAAI,EAAGA,IAAK,CAC/CD,EAAIN,KAAKQ,MAAMR,KAAKS,UAAYF,EAAI,IADW,MAEZ,CAAC3C,EAAY2C,GAAI3C,EAAY0C,IAA/D1C,EAAY0C,GAFkC,KAE9B1C,EAAY2C,GAFkB,KAIjD,OAAO3C,EDqB8B8C,CAAahJ,GAAQ,GAAGiB,OA8BTyF,KAAI,SAACuC,GAAD,OAAa,kBAAC,EAAoBA,SE7C/EC,G,YAAM,WACjB,IAAMnG,EAAWC,cADM,EAEOyB,oBAAS,GAFhB,mBAEhBuC,EAFgB,KAEPC,EAFO,KAiBrB,OAbFjC,qBAAU,WACRiC,GAAW,GACXK,EAAoB,GACjBnF,MAAK,SAACzC,GACLuH,GAAW,GACXlE,EjBpBmB,SAACrD,GAC1B,MAAO,CACLc,KHJwB,eGKxBd,iBiBiBayJ,CAAYzJ,EAAc6H,eAEtC,IAEHvC,qBAAU,WACRsC,IAAgBnF,MAAK,SAAAnC,GAAM,OAAI+C,EjBXT,SAAC/C,GACzB,MAAO,CACLQ,KHhBuB,cGiBvBR,UiBQwCoJ,CAAWpJ,EAAOA,cACzD,IAGM,kBAAC,IAAD,CAAQqJ,SAAUC,YAChB,kBAAC,EAAD,MACA,yBAAKlI,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmI,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,CACExC,QAASA,EACTC,WAAYA,KAGhB,kBAAC,IAAD,CAAOsC,KAAK,eAAeC,OAAK,EAACC,UAAW5B,IAC5C,kBAAC,IAAD,CAAU6B,KAAK,WAAWrI,GAAG,WCnCjC6B,EAAQyG,YAAYC,GAGjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAU7G,MAAOA,GACf,kBAAC,EAAD,QAGJ8G,SAASC,eAAe,W","file":"static/js/main.7de40519.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.56fd61ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/male.21a1bdaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite_off.05e37c73.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite_on.1f43ea1c.svg\";","import * as types from './actions';\n\nconst initialState = {\n  popular_films: [],\n  favorites_films: JSON.parse(localStorage.getItem('favorites_films') || \"[]\"),\n  genres: [],\n  film_details: {},\n  filterMode: 'popular',\n  sortMode: 'default',\n  searchValue: ''\n};\n\n\nconst films = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOAD_POPULAR:\n      const { popular_films } = action;\n      return {\n        ...state,\n        popular_films\n      };\n    case types.LOAD_MORE_POPULAR:\n      const { films } = action;\n      return {\n        ...state,\n        popular_films: [...state.popular_films, ...films]\n      };\n    case types.LOAD_GENRES:\n      const { genres } = action;\n      return {\n        ...state,\n        genres\n      };\n    case types.LOAD_FILM_DETAILS:\n      const { film_details } = action;\n      return {\n        ...state,\n        film_details\n      };\n    case types.ADD_TO_FAVORITES:\n      const { film } = action;\n      const added = [...state.favorites_films, film];\n      localStorage.setItem('favorites_films', JSON.stringify(added));\n      return {\n        ...state,\n        favorites_films: added\n      };\n    case types.DELETE_FROM_FAVORITES:\n      const { filmId } = action;\n      const deleted = state.favorites_films.filter((stateFilm) => stateFilm.id !== filmId);\n      localStorage.setItem('favorites_films', JSON.stringify(deleted));\n      return {\n        ...state,\n        favorites_films: deleted\n      };\n    case types.SET_FILTER_MODE:\n      const { filterMode } = action;\n      return {\n        ...state,\n        filterMode\n      };\n    case types.SET_SORT_MODE:\n      const { sortMode } = action;\n      return {\n        ...state,\n        sortMode\n      };\n    case types.SET_SEARCH_VALUE:\n      const { searchValue } = action;\n      return {\n        ...state,\n        searchValue\n      };\n    default: return state;\n  }\n};\n\nexport default films;\n","export const LOAD_POPULAR = 'load_popular';\nexport const LOAD_MORE_POPULAR = 'load_more_popular';\nexport const LOAD_GENRES = 'load_genres';\nexport const LOAD_FILM_DETAILS = 'load_film_details';\nexport const ADD_TO_FAVORITES = 'add_to_favorites';\nexport const DELETE_FROM_FAVORITES = 'delete_from_favorites';\nexport const SET_FILTER_MODE = 'set_filter_mode';\nexport const SET_SORT_MODE = 'set_sort_mode';\nexport const SET_SEARCH_VALUE = 'set_search_value';\n\n","import { combineReducers } from 'redux';\nimport films from './films';\n\nexport default combineReducers({\n  films\n});\n\n\n","import React from 'react';\n\nimport './index.scss';\nimport logo from '../../assets/logo.svg';\nimport userPic from '../../assets/male.svg';\nimport {NavLink} from \"react-router-dom\";\n\nexport const Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__logo\">\n            <NavLink to=\"/\">\n              <img\n                src={logo}\n                alt=\"Logo\"\n                width={154}\n                height={20}\n              />\n            </NavLink>\n          </div>\n          <div className=\"header__profile\">\n            <img src={userPic} alt=\"User Avatar\"/>\n            Nickname\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n};\n","import * as types from './actions';\n\nexport const loadPopular = (popular_films) => {\n  return {\n    type: types.LOAD_POPULAR,\n    popular_films\n  }\n};\n\nexport const loadMorePopular = (films) => {\n  return {\n    type: types.LOAD_MORE_POPULAR,\n    films\n  }\n};\n\nexport const loadGenres = (genres) => {\n  return {\n    type: types.LOAD_GENRES,\n    genres\n  }\n};\n\nexport const loadFilmDetails = (film_details) => {\n  return {\n    type: types.LOAD_FILM_DETAILS,\n    film_details\n  }\n};\n\nexport const addToFavorites = (film) => {\n  return {\n    type: types.ADD_TO_FAVORITES,\n    film\n  }\n};\n\nexport const deleteFromFavorites = (filmId) => {\n  return {\n    type: types.DELETE_FROM_FAVORITES,\n    filmId\n  }\n};\n\nexport const setFilterMode = (filterMode) => {\n  return {\n    type: types.SET_FILTER_MODE,\n    filterMode\n  }\n};\n\nexport const setSortMode = (sortMode) => {\n  return {\n    type: types.SET_SORT_MODE,\n    sortMode\n  }\n};\n\nexport const setSearchValue = (searchValue) => {\n  return {\n    type: types.SET_SEARCH_VALUE,\n    searchValue\n  }\n};\n","const API_KEY = '52f110ad1b13b1b6c28850d706a5eb73';\nconst BASE_END_POINT = 'https://api.themoviedb.org/3/';\n\nexport const getMovie = async (movieId) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n        .then((response) => response.json());\n};\n\nexport const getPopularFilms = async (page = 1) => {\n    return fetch(`${BASE_END_POINT}movie/popular?api_key=${API_KEY}&page=${page}`)\n      .then((response) => response.json());\n};\n\nexport const getGenres = async () => {\n    return fetch(`${BASE_END_POINT}genre/movie/list?api_key=${API_KEY}`)\n      .then((response) => response.json());\n};\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nexport const FilterItem = ({title, handler, active}) => {\n    return (\n        <div\n            className={`filter-item ${active && 'filter-item_active'}`}\n            onClick={handler}\n        >\n            {title}\n        </div>\n    )\n};\n\nFilterItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    active: PropTypes.bool.isRequired\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {setFilterMode, setSortMode} from '../../store/films/actionCreators';\nimport { FilterItem } from './FilterItem';\n\nimport './index.scss';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filterMode = useSelector((store) => store.films.filterMode);\n\n    const changeFilterMode = (mode) => {\n      dispatch(setFilterMode(mode));\n      dispatch(setSortMode('default'));\n    };\n\n    return (\n        <section className=\"filter\">\n            <FilterItem\n                title=\"Popular\"\n                handler={() => changeFilterMode('popular')}\n                active={filterMode === 'popular'}\n            />\n            <FilterItem\n                title=\"Favorites\"\n                handler={() => changeFilterMode('favorites')}\n                active={filterMode === 'favorites'}\n            />\n        </section>\n    )\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearchValue } from '../../store/films/actionCreators';\n\nimport './index.scss'\n\nexport const SearchBar = () => {\n  const dispatch = useDispatch();\n  const searchValue = useSelector((store) => store.films.searchValue);\n\n    return (\n        <section className=\"search\">\n            <label className=\"search__label\" htmlFor=\"search\">Search films</label>\n            <input\n                className=\"search__input\"\n                id=\"search\"\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search whatever you want\"\n                value={searchValue}\n                onChange={(e) => dispatch(setSearchValue(e.target.value))}\n            />\n        </section>\n    )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nexport const SortItem = ({title, handler, active}) => {\n\n    return (\n        <div\n          className={`sort-item ${active && 'sort-item_active'}`}\n            onClick={handler}\n        >\n            {title}\n        </div>\n    )\n};\n\nSortItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSortMode } from '../../store/films/actionCreators' ;\n\nimport { SortItem } from './SortItem';\n\nimport './index.scss';\n\nexport const Sort = () => {\n  const dispatch = useDispatch();\n  const sortMode = useSelector((store) => store.films.sortMode);\n\n  const changeSortMode = (mode) => {\n    dispatch(setSortMode(mode));\n  };\n    return (\n        <section className=\"sort\">\n            <SortItem\n              title=\"Sort by default\"\n              handler={() => changeSortMode('default')}\n              active={sortMode === 'default'}\n            />\n            <SortItem\n              title=\"Sort by date\"\n              handler={() => changeSortMode('release_date')}\n              active={sortMode === 'release_date'}\n            />\n            <SortItem\n              title=\"Sort by rating\"\n              handler={() => changeSortMode('vote_average')}\n              active={sortMode === 'vote_average'}\n            />\n        </section>\n    )\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {addToFavorites, deleteFromFavorites} from '../../store/films/actionCreators';\nimport {NavLink} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport './index.scss';\nimport favorite_off from '../../assets/favorite_off.svg';\nimport favorite_on from '../../assets/favorite_on.svg';\n\nexport const FilmCard = ({id, title, release_date, poster_path, vote_average, genres, genreIds, overview, }) => {\n    const favoritesFilms = JSON.parse(localStorage.getItem('favorites_films') || \"[]\");\n    const dispatch = useDispatch();\n    const [isFavorite, setIsFavorite] = useState(\n      favoritesFilms.filter((favFilm) => favFilm.id === id).length !== 0\n    );\n    const [filmGenres, setFilmGenres] = useState([]);\n\n\n    const chooseRatingClass = () => {\n      if (vote_average >= 7) {\n        return 'film-card__rating_high'\n      } else if (vote_average < 7 && vote_average > 4) {\n        return 'film-card__rating_medium';\n      } else {\n        return 'film-card__rating_low'\n      }\n    };\n\n    const favoriteManage = (e) => {\n      e.preventDefault();\n\n      if (isFavorite) {\n        dispatch(deleteFromFavorites(id));\n\n        setIsFavorite(false);\n        window.M.toast({ html: 'Фильм удален из избранного' });\n        return;\n      }\n\n      dispatch(addToFavorites({\n        id,\n        title,\n        release_date,\n        poster_path,\n        vote_average,\n        genres,\n        genre_ids: genreIds,\n        overview,\n      }));\n      setIsFavorite(true);\n      window.M.toast({ html: 'Фильм добавлен в избранное' })\n    };\n\n    useEffect(() => {\n      genreIds.forEach((genreId) => {\n        genres.forEach((genre) => {\n          if (genre.id === genreId) {\n            setFilmGenres(prev => [...prev, genre.name])\n          }\n        })\n      });\n    }, [genres]);\n\n    return (\n          <div className=\"film-card\">\n            <NavLink to={`/details/${id}`}>\n            <div className=\"film-card__poster\">\n              <img src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${poster_path}`} alt=\"Film's Poster\"/>\n              <div\n                className=\"film-card__to-fav\"\n                onClick={favoriteManage}\n              >\n                <img src={isFavorite ? favorite_on : favorite_off} alt=\"Favorite\" width={48} height={48}/>\n              </div>\n            </div>\n            <div className=\"film-card__title\">\n              <h3>{title} |</h3>\n              <span className={`film-card__rating ${chooseRatingClass()}` }>\n                  {vote_average}\n                </span>\n            </div>\n            <div className=\"film-card__info\">\n              <div className=\"film-card__release-date\">\n                {moment(release_date).format('LL')}\n              </div>\n              <div className=\"film-card__genres\">\n                {filmGenres\n                  .slice(0, filmGenres.length <= 3 ? filmGenres.length : 3)\n                  .join(', ')\n                }\n              </div>\n            </div>\n            <div className=\"film-card__desc\">\n              {overview.slice(0, 200)}...\n            </div>\n            </NavLink>\n          </div>\n    )\n};\n\nFilmCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genreIds: PropTypes.array.isRequired,\n    overview: PropTypes.string.isRequired\n};\n","import moment from 'moment';\n\nconst sortFilms = (films, sortMode = 'default') => {\n  switch (sortMode) {\n    case 'release_date': {\n      const shallowCopy = [...films];\n      return shallowCopy.sort((a, b) => moment(a.release_date).format('X') - moment(b.release_date).format('X'));\n    }\n    case 'vote_average': {\n      const shallowCopy = [...films];\n      return shallowCopy.sort((a, b) => a.vote_average - b.vote_average);\n    }\n\n    default: return films;\n  }\n};\n\nexport {\n  sortFilms\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilmCard } from '../FilmCard';\n\nimport './index.scss';\nimport { sortFilms } from '../../utils/sortingFilms';\n\nexport const Popular = ({genres, favoritesFilms, sortMode, searchValue}) => {\n  const popularFilms = useSelector((store) => store.films.popular_films);\n\n\n  const sortedFilms = sortFilms(popularFilms, sortMode);\n\n  return (\n    <>\n      {sortedFilms\n        .filter((film) => film.title.toLowerCase().includes(searchValue.toLowerCase())).length !== 0 ?\n        sortedFilms\n          .filter((film) => film.title.toLowerCase().includes(searchValue.toLowerCase()))\n          .map((film) => <FilmCard\n          key={film.id}\n          id={film.id}\n          vote_average={film.vote_average}\n          release_date={film.release_date}\n          overview={film.overview}\n          poster_path={film.poster_path}\n          title={film.title}\n          runtime={film.runtime}\n          genreIds={film.genre_ids}\n          genres={genres}\n          favoritesFilms={favoritesFilms}/>) :\n          <div>Unfortunately we did not find anything :(</div>\n      }\n    </>\n  )\n};\n","import React from 'react';\nimport { FilmCard } from '../FilmCard';\nimport { useSelector } from \"react-redux\";\nimport { sortFilms } from '../../utils/sortingFilms';\n\nexport const Favorites = ({genres, favoritesFilms, sortMode, searchValue}) => {\n\n  const sortedFilms = sortFilms(favoritesFilms, sortMode);\n\n  return (\n    <>\n      {sortedFilms\n        .filter((film) => film.title.toLowerCase().includes(searchValue.toLowerCase())).length !== 0 ?\n        sortedFilms\n          .filter((film) => film.title.toLowerCase().includes(searchValue.toLowerCase()))\n          .map((film) => <FilmCard\n            key={film.id}\n            id={film.id}\n            vote_average={film.vote_average}\n            release_date={film.release_date}\n            overview={film.overview}\n            poster_path={film.poster_path}\n            title={film.title}\n            runtime={film.runtime}\n            genreIds={film.genre_ids}\n            genres={genres}\n            favoritesFilms={favoritesFilms}/>) :\n        <div>Unfortunately we did not find anything :(</div>\n      }\n    </>\n  )\n};\n\n\n","import React from 'react';\n\nimport './index.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n};\n","import React, { useEffect, useState } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {loadGenres, loadMorePopular, loadPopular} from '../../store/films/actionCreators';\nimport * as API from '../../api';\n\nimport { Filter } from '../../components/Filter';\nimport { SearchBar } from '../../components/SearchBar';\nimport { Sort } from '../../components/Sort';\nimport { Popular } from '../../components/Popular';\nimport { Favorites } from '../../components/Favorites';\nimport { Loader } from '../../components/Loader';\n\n\nimport './index.scss'\n\nexport const Welcome = ({loading, setLoading}) => {\n  const [loadedPage, setLoadedPage] = useState(1);\n  const dispatch = useDispatch();\n  const favoritesFilms = JSON.parse(localStorage.getItem('favorites_films'));\n  const filterMode = useSelector((store) => store.films.filterMode);\n  const sortMode = useSelector((store) => store.films.sortMode);\n  const searchValue = useSelector((store) => store.films.searchValue);\n  const genres = useSelector((store) => store.films.genres);\n\n\n\n  const loadMore = (page) => {\n    setLoadedPage(page);\n    setLoading(true);\n    API.getPopularFilms(page)\n      .then((popular_films) => {\n        setLoading(false);\n        dispatch(loadMorePopular(popular_films.results));\n      });\n  };\n\n  console.log(loading);\n\n  return (\n    <div className=\"welcome\">\n      <div className=\"welcome__controls\">\n        <div className=\"welcome__controls-row welcome__controls-row_1\">\n          <Filter/>\n        </div>\n        <div className=\"welcome__controls-row welcome__controls-row_2\">\n          <SearchBar/>\n        </div>\n      </div>\n      <div className=\"welcome__sort\">\n        <Sort/>\n      </div>\n      <div className=\"welcome__content\">\n        {loading ?\n          <Loader/> :\n          filterMode === 'popular' ?\n            <Popular\n              favoritesFilms={favoritesFilms}\n              sortMode={sortMode}\n              searchValue={searchValue}\n              genres={genres}\n            /> :\n            <Favorites\n              favoritesFilms={favoritesFilms}\n              sortMode={sortMode}\n              searchValue={searchValue}\n              genres={genres}\n            />\n        }\n      </div>\n      {filterMode === 'popular' &&\n      !loading &&\n        <button\n          className=\"welcome__show-more\"\n          type=\"button\"\n          onClick={() => loadMore(loadedPage + 1)}\n        >\n          Show more\n        </button>\n      }\n    </div>\n  )\n};\n","import React from 'react';\n\nimport './index.scss';\n\nexport const RecommendedFilm = ({poster, title, vote_average}) => {\n\n\n  return (\n    <div className=\"recommended-film\">\n      <div className=\"recommended-film__poster\">\n        <img src={poster} alt=\"\"/>\n      </div>\n      <div className=\"recommended-film__title\">\n        {title}\n      </div>\n      <div className=\"recommended-film__rating\">\n        {vote_average}\n      </div>\n    </div>\n  )\n};\n","import moment from 'moment';\nconst parseRuntime = (runtime) => {\n  const hours = Math.trunc(runtime / 60);\n  const minutes = runtime % 60;\n  return `${hours}h ${minutes}m`\n};\n\nconst parseReleaseDate = (release_date) => {\n  return moment(release_date).format('LL');\n};\n\nconst parseBigInt = (big_int) => {\n  return big_int.replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 ')\n};\n\nexport {\n  parseRuntime,\n  parseReleaseDate,\n  parseBigInt\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadFilmDetails } from '../../store/films/actionCreators';\nimport * as API from '../../api';\n\nimport {RecommendedFilm} from '../../components/RecommendedFilm';\n\nimport './index.scss';\nimport * as parseDetails from '../../utils/parseFilmsDetails';\nimport { shuffleArray } from '../../utils/shuffleArray';\n\nexport const FilmDetails = ({match}) => {\n  const dispatch = useDispatch();\n  const [recommendedList, setRecommendedList] = useState([]);\n  const detailedFilm = useSelector((store) => store.films.film_details);\n  const popularFilms = useSelector((store) => store.films.popular_films);\n  const { id, title, tagline, runtime, budget, genres, revenue, release_date, vote_average, poster_path, overview } = detailedFilm;\n\n  console.log(detailedFilm);\n\n  useEffect(() => {\n    API.getMovie(match.params.id)\n      .then((details) => dispatch(loadFilmDetails(details)));\n  }, []);\n\n  const mapRecommendedFilms = () => {\n    return popularFilms.filter((film) => {\n      if (film.id !== id) {\n        return film.genre_ids.includes(shuffleArray(genres)[0].id);\n      }\n    });\n  };\n\n\n\n  return (\n    <div className=\"film-details\">\n      <div className=\"film-details__poster\">\n        <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`} alt=\"\"/>\n      </div>\n      <div className=\"film-details__content\">\n        <h3 className=\"film-details__title\">\n          {title}\n        </h3>\n        <p className=\"film-details__tagline\">{tagline}</p>\n        <p className=\"film-details__paragraph film-details__runtime\">Runtime: {parseDetails.parseRuntime(runtime)}</p>\n        <p className=\"film-details__paragraph film-details__release-date\">Release date: {parseDetails.parseReleaseDate(release_date)}</p>\n        <p className=\"film-details__paragraph film-details__budget\">Budget: $ {parseDetails.parseBigInt(String(budget))}</p>\n        <p className=\"film-details__paragraph film-details__revenue\">Revenue: $ {parseDetails.parseBigInt(String(revenue))}</p>\n        <p className=\"film-details__paragraph film-details__rating\">Rating: {vote_average}</p>\n        <p className=\"film-details__paragraph film-details__genres\">Genres: {genres && genres.map((genre) => genre.name).join(', ')}</p>\n      </div>\n      <div className=\"film-details__overview\">\n        <h3>Description:</h3>\n        {overview}\n      </div>\n      <div className=\"film-details__recommended-films\">\n        <h3>Recommended films:</h3>\n        {detailedFilm.genres && mapRecommendedFilms().map((recFilm) => <RecommendedFilm {...recFilm}/>)}\n      </div>\n    </div>\n  )\n};\n\n","export const shuffleArray = (arr) => {\n  const shallowCopy = [...arr];\n  let j;\n  for (let i = shallowCopy.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    [shallowCopy[j], shallowCopy[i]] = [shallowCopy[i], shallowCopy[j]];\n  }\n  return shallowCopy;\n};\n\n","import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Header } from '../../components/Header';\nimport { Welcome } from '../Welcome';\nimport { FilmDetails } from '../FilmDetails';\n\nimport './index.scss';\nimport 'materialize-css';\nimport {useDispatch} from 'react-redux';\nimport {loadGenres, loadPopular} from '../../store/films/actionCreators';\nimport * as API from '../../api';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    API.getPopularFilms(1)\n      .then((popular_films) => {\n        setLoading(false);\n        dispatch(loadPopular(popular_films.results));\n      });\n  }, []);\n\n  useEffect(() => {\n    API.getGenres().then(genres => dispatch(loadGenres(genres.genres)));\n  }, []);\n\n    return (\n           <Router basename={process.env.PUBLIC_URL}>\n             <Header/>\n             <div className=\"container\">\n               <Switch>\n                 <Route path=\"/\" exact>\n                   <Welcome\n                     loading={loading}\n                     setLoading={setLoading}\n                   />\n                 </Route>\n                 <Route path=\"/details/:id\" exact component={FilmDetails}/>\n                 <Redirect from=\"/details\" to=\"/\"/>\n               </Switch>\n             </div>\n           </Router>\n    )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport rootReducer from './store/index';\nimport { App } from './containers/App';\nimport {Provider} from \"react-redux\";\n\nexport const store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}